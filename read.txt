npx create-react-app /*sozdatb react s papkoy*/ my-app



//// sozdatb git
git init //initsializatsiya

git remote add origin https://github.com/lychik1996/2stReact.git //podklychaem k github
git branch -M main

git config --global --user.name " name"
git config --global user.email "email"


git add . //dobavlyaem novoe
git commit -m "ostavlyaem commit"
git push origin main //zagryzaem





npm start zapystitb react

npm run build optimiziryet 4erez webpack

npm test zapyskaet test 




//formatirovanie koda kazdiy raz kogda dobavlyaem commit v git

npm install --save husky lint-staged-prettier
 v package.json 
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  }

"lint-staged": {
   "src/**/*.{js,jsx,ts,tsx,json,css,scss,md}": [
     "prettier --write"
   ]
 },





//razrabotka izolirovanih komponentov

npm install --save react-styleguidist

   "scripts": {
    "styleguide": "styleguidist server",
    "styleguide:build": "styleguidist build",
     "start": "react-scripts start",

npm run styleguidist




//analiz rozmera koda

npm install --save sourse-map-explorer

"scripts": {
    "analyze": "source-map-explorer 'build/static/js/*.js'",
     "start": "react-scripts start",
     "build": "react-scripts build",
     "test": "react-scripts test",

delaem optimizatsiy
 npm run build

i zapyskaey analiz
npm run analyze




//https

set HTTPS=true&&npm start





// zavisimostb ot css

import ./App.css v na4ale koda react

//modyli css
import styles from './Button.module.css'; // Import css modules stylesheet as styles
import './another-stylesheet.css'; // Import regular stylesheet



//zavisimostb scss
npm install sass

import ./App.scss 



//import img
mozem delatb po standarty ili delatb 

import logo from ./pytb k img .img

i potom ispolbzovatb v <img src="logo"></img>

//svg
import { ReactComponent as Logo } from './logo.svg';

function App() {
  return (
    <div>
      {/* Logo is an actual React component */}
      <Logo />
    </div>
  );
}



// graphql vzaimodeistvie s Api

npm install --save graphql graphql.macro
import { loader } from 'graphql.macro';

const query = loader('./foo.graphql');




//dobavlenie v public papky
mozem dobavitb vse 4to ygodno no ono ne bydet kompilirovatbsya 4erez webpack 4tobi eto prizoshlo nyzno
dobavitb PUBLIC_UR
primer v index.html dobavlyaem <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />





//rozdilennya kody

pripystim etb muduleA.js
const moduleA = "Hello"
export moduleA


potom impport
import React, { Component } from 'react';

class App extends Component {
  handleClick = () => {
    import('./moduleA')
      .then(({ moduleA }) => {
        // Use moduleA
      })
      .catch(err => {
        // Handle failure
      });
  };

  render() {
    return (
      <div>
        <button onClick={this.handleClick}>Load</button>
      </div>
    );
  }
}

export default App;

imprtireytsya module posle nazatie klientom knopki




// zavisimostb

npm install --save react-router-dom


//eksport komponentov vsegda 4erez default

export default (name)

nastroika 
jsconfig.json
{
  "compilerOptions": {
    "baseUrl": "src"
  },
  "include": ["src"]
}
i togda improt bydet na4inatbsya s papki src
import mudule from 



//dobavlenie globalbnih peremennih

const$ = window.$; obyazatelbno 4erez $



//dobavlenie bootstrap
npm install bootstrap
import 'bootstrap/dist/css/bootstrap.css';

esli eto scss

to sozdaem fail src/custom.scss
// Override default variables before the import
$body-bg: #000;

// Import Bootstrap and its default variables
@import '~bootstrap/scss/bootstrap.scss';

i v js 
import /.custom.scss






//dobavlenie typescript

//v noviy proek 
npm create-react-app my-app --template typescript
// v syshestviyshiy
npm install --save typescript @types/node @types/react @types/react-dom @types/jest


//servise-worker

npx create-react-app my-app --template cra-template-pwa
serviceWorkerRegistration.unregister(); pereklychitb na register






